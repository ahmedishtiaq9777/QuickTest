@model QuickTest.Models.SellerViewModels.Step3

@{
    ViewData["Title"] = "step3";
    Layout = "~/Views/Shared/HomeLayout2.cshtml";
}
@section css{

    <style>

        .row {
            margin-left: 400px;
            margin-top: 50px;
           border:double;
        }

        h1 {
            margin-left: 650px;
            margin-top: 100px;
        }




        @@media only screen and (max-width: 768px) {

            .row {
                margin-left: 20px;
                margin-top: 30px;
               
                margin-right: 20px;
            }

            h1 {
                margin-left: 30px;
                margin-top: 60px;
            }
        }



    </style>
}
<h1>Shop Address</h1>


<hr />
<div class="row col-4 col-lg-6">
    <div class="col-5 col-md-4 col-lg-11">
        <form  id="form3" asp-action="step3" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" id="location" type="text" placeholder="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="State" class="control-label"></label>
                <input asp-for="State" type="text" id="administrative_area_level_1" required placeholder="state" class="form-control" />
                <span asp-validation-for="State" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" type="text" id="locality" required placeholder="city" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Area" class="control-label"></label>
                <input asp-for="Area" type="text" placeholder="area" id="sublocality_level_1" required class="form-control" />
                <span asp-validation-for="Area" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Streetareaname" class="control-label"></label>
                <input asp-for="Streetareaname" type="text" placeholder="area" id="route" required class="form-control" />
                <span asp-validation-for="Streetareaname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="logo"required type="file" id="img" name="img" class="form-control"/>
            </div>
           
                <input id="lat" asp-for="lat" hidden type="text"  />

                <input id="long" asp-for="longitude" hidden type="text" />
            <div class="form-group">
                <input type="submit" value="Done" id="btn-3" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            const formBtn3 = document.querySelector('#btn-3');

            formBtn3.addEventListener('click', function (e) {
                $("#form3").submit(function (n) {
                    
                    n.preventDefault();

                    //var latinput = document.getElementById('lat');
                    //var longinput = document.getElementById('long');
                   

                    if ($('#lat').val() != "" && $('#long').val() != "") {

                        document.getElementById("form3").submit();

                    } else {

                        alert("Please select location From Suggestions");

                    }

                    
                                                       

                });
            });
        });
 


    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDz3cPe7AisTtUnRxEy1JdznCn70BhEMXM&libraries=places&callback=initialize"
            async defer></script>

    <script>
                    var componentForm = {
                        street_number: 'short_name',
                        route: 'long_name',
                        locality: 'long_name',
                        administrative_area_level_1: 'short_name',
                        country: 'long_name',
                        postal_code: 'short_name',
                        sublocality_level_1: 'long_name'
                    };
                    function initialize() {

                        var options = {

                            componentRestrictions: { country: "pk" }
                        };


                        //var options = {

                        //    types: ['(cities)'],
                        //    componentRestrictions: { country: "pk" }
                        //};

                        var input = document.getElementById('location');


                        var autocomplete = new google.maps.places.Autocomplete(input, options);
                        // autocomplete.setFields(['address_component']);
                        google.maps.event.addListener(autocomplete, 'place_changed', function () {
                            var place = autocomplete.getPlace();
                            console.log(place);
                            console.log("latitude");
                            console.log(place.geometry.location.lat());
                            console.log("longitude");
                            console.log(place.geometry.location.lng());
                            var latinput = document.getElementById('lat');
                            var longinput = document.getElementById('long');
                            // alert(place.geometry.location.lat());
                            latinput.value = place.geometry.location.lat();
                           
                            longinput.value = place.geometry.location.lng();



                            //for (var component in componentForm) {
                            //    document.getElementById(component).value = '';
                            //    document.getElementById(component).disabled = false;
                            //}

                            // Get each component of the address from the place details,
                            // and then fill-in the corresponding field on the form.
                            for (var i = 0; i < place.address_components.length; i++) {
                                var addressType = place.address_components[i].types[0];
                                if (componentForm[addressType]) {
                                    var val = place.address_components[i][componentForm[addressType]];
                                    document.getElementById(addressType).value = val;
                                }
                            }





                            // document.getElementById('city2').value = place.name;
                            //   document.getElementById('cityLat').value = place.geometry.location.lat();
                            // document.getElementById('cityLng').value = place.geometry.location.lng();
                            //alert("This function is working!");
                            //alert(place.name);
                            // alert(place.address_components[0].long_name);

                        });
                    }
                     //   google.maps.event.addDomListener(window, 'load', initialize);

    </script>

}
